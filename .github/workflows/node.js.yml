# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Upgrade NPM
      run: npm install -g npm
    - run: npm ci
    - run: yarn build
#     - name: Typecheck
#       run: yarn typecheck
#       continue-on-error: true
    - name: Save build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-dist
        path: |
          dist
          !dist/**/*.md

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          cat >>~/.ssh/config <<END
          Host leds-main
            ForwardAgent yes
            HostName $PROXY_HOST
            User $SSH_USER
            IdentityFile "~/.ssh/deploy.key"
            StrictHostKeyChecking no
          Host leds-aqg
            HostName $SSH_HOST
            User $SSH_USER
            ProxyJump leds-main
            IdentityFile "~/.ssh/deploy.key"
            ServerAliveInterval 60
            ServerAliveCountMax 5
            ForwardAgent yes
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.HOST }}
          PROXY_HOST: ${{ secrets.PROXY_HOST }}

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-dist
          
      - name: Check out the source
        run:  scp -r ./* leds-aqg:/home/ladev/workspace/src/

      - name: Reload Nginx docker service
        run: ssh leds-aqg 'docker container exec nginx nginx -s reload' 
